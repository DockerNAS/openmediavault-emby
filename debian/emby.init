#! /bin/sh
#
### BEGIN INIT INFO
# Provides:          emby
# Description:       Emby Media Server
# Short-Description: Init script for Emby Media Server
# Provides:          emby
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Emby Media Server
# Description:       Init script for starting and
#         stopping Emby Media Server using the 
#         start-stop-daemon.
### END INIT INFO

set -e

SERVICE="emby"
RUN_AS="emby"
RUN_GRP="nogroup"
APP_PATH="/opt/${SERVICE}"
PID_FILE="/var/run/${SERVICE}.pid"
DAEMON="/usr/bin/mono -- MediaBrowser.Server.Mono.exe"

SERVICE_XPATH="//services/${SERVICE}"

. /lib/lsb/init-functions
. /usr/share/openmediavault/scripts/helper-functions


is_running() {
    if [ ! -e $PID_FILE ]; then
        return 1
    else
        PID=`cat $PID_FILE`
        if ! kill -0 $PID > /dev/null 2>&1; then
            rm $PID_FILE
            return 1
        fi
    fi
    return 0
}    

start() {
  if ! is_running; then
    echo "Starting $SERVICE"
	if omv_config_exists "${SERVICE_XPATH}"; then
		DBFOLDER="$(omv_config_get "${SERVICE_XPATH}/db-folder")"
	else
		DBFOLDER="/var/lib/${SERVICE}"
	fi

	DAEMON_OPTS=" -programdata ${DBFOLDER} -restartpath /usr/sbin/${SERVICE}.sh"

#	 start-stop-daemon --start --user root --chuid root --background -m --oknodo --pidfile /var/run/mediabrowser/mediabrowser.pid --chdir /opt/mediabrowser --exec /opt/mono/bin/mono -- MediaBrowser.Server.Mono.exe -programdata /var/lib/mediabrowser
	start-stop-daemon -c $RUN_AS:$RUN_GRP --start --background -m --oknodo -p $PID_FILE --chdir $APP_PATH --exec $DAEMON $DAEMON_OPTS
  else
    echo "$SERVICE is running"
  fi
}

stop() {
  if is_running; then
    echo "Stopping $SERVICE"
#        start-stop-daemon --stop --pidfile /var/run/mediabrowser/mediabrowser.pid --retry 15 
	start-stop-daemon --stop -p $PID_FILE --retry 15

    rm -rf $PID_FILE
  fi
}

restart() {
  if is_running; then
    stop
    sleep 1
    start
  else
    echo "$SERVICE is not running"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  status)
#	 status_of_proc -p /var/run/mediabrowser/mediabrowser.pid "/opt/mono/bin/mono -- MediaBrowser.Server.Mono.exe" "mediabrowser"
	status_of_proc -p $PID_FILE "$DAEMON" "$SERVICE"
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"

esac
